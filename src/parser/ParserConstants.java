/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int NUM = 1;
  /** RegularExpression Id. */
  int PLUS = 2;
  /** RegularExpression Id. */
  int MINUS = 3;
  /** RegularExpression Id. */
  int TIMES = 4;
  /** RegularExpression Id. */
  int DIV = 5;
  /** RegularExpression Id. */
  int LPAR = 6;
  /** RegularExpression Id. */
  int RPAR = 7;
  /** RegularExpression Id. */
  int EL = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int NEQ = 10;
  /** RegularExpression Id. */
  int AND = 11;
  /** RegularExpression Id. */
  int OR = 12;
  /** RegularExpression Id. */
  int NEG = 13;
  /** RegularExpression Id. */
  int GR = 14;
  /** RegularExpression Id. */
  int LR = 15;
  /** RegularExpression Id. */
  int GRE = 16;
  /** RegularExpression Id. */
  int LRE = 17;
  /** RegularExpression Id. */
  int TRUE = 18;
  /** RegularExpression Id. */
  int FALSE = 19;
  /** RegularExpression Id. */
  int LET = 20;
  /** RegularExpression Id. */
  int IN = 21;
  /** RegularExpression Id. */
  int IF = 22;
  /** RegularExpression Id. */
  int THEN = 23;
  /** RegularExpression Id. */
  int ELSE = 24;
  /** RegularExpression Id. */
  int WHILE = 25;
  /** RegularExpression Id. */
  int DO = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int SEMICOLON = 28;
  /** RegularExpression Id. */
  int REF = 29;
  /** RegularExpression Id. */
  int REREF = 30;
  /** RegularExpression Id. */
  int DEREF = 31;
  /** RegularExpression Id. */
  int NEW = 32;
  /** RegularExpression Id. */
  int PRINT = 33;
  /** RegularExpression Id. */
  int PRINTLN = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int UNIT = 36;
  /** RegularExpression Id. */
  int INT = 37;
  /** RegularExpression Id. */
  int BOOL = 38;
  /** RegularExpression Id. */
  int FUN = 39;
  /** RegularExpression Id. */
  int ARROW = 40;
  /** RegularExpression Id. */
  int ID = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<NUM>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"(\"",
    "\")\"",
    "\"\\n\"",
    "\"=\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"~\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"true\"",
    "\"false\"",
    "\"let\"",
    "\"in\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"end\"",
    "\";\"",
    "\":=\"",
    "\"::=\"",
    "\"!\"",
    "\"new\"",
    "\"print\"",
    "\"println\"",
    "\",\"",
    "\"unit\"",
    "\"int\"",
    "\"bool\"",
    "\"fun\"",
    "\"->\"",
    "<ID>",
    "\" \"",
  };

}
